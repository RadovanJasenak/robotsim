# version 330 core

layout (location=0) in vec3 vertexPos;
layout (location=1) in vec3 vertexColor;

uniform mat4 projection; // projection matrix
uniform mat4 view; // view matrix 'camera'
uniform mat4 model; // combined translation and rotation

out vec3 fragmentColor;

void main(){
            // clip space * view space * world space * local space
    gl_Position = projection * view *  model * vec4(vertexPos, 1.0);
    fragmentColor = vertexColor;
}